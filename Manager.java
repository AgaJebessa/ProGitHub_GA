package Wk3Assignment2;

import java.util.*;

public class Manager {

    public Vector<Reservation> reservations;// Store lists of reservations

    public Boolean duplicateAccount;//validate duplication and store

    public String reservationDraft; //Store draft reservation

    //create new reservation account
    public void createNewReservationAccount() {
        /*validate and Create new account (generated by UI )
         *call Manager, createNewReservationAccount=new reservation;
         */
    }

    // Add reservation to the currently loaded Reservation.reservation
    public void addReservation() {
        /* Validate there is an open account loaded to run otherwise fail
         *call Reservation.addReservation()
         */
    }

    //Edit an existing reservation.
    public void editReservation() {
        /* validate there is an existing reservation to edit otherwise fail
         * call Reservation.editReservation()
         */
    }

//delete the reservation with  Account parameter

    public String deleteReservation(Account account) {
        /*validate the reservation prior to delete
         * call account.deleteReservation(account)
         */
        return null;
    }

    //load reservation information from a file (file format .txt,.html, .json)
    public void openFromFile(final String fileName) {
        /* Validate file type and is loaded. The fileName constant
         *fileName=new openFromFile(fileName); Example fileName = new openFromFile("filename.txt");
         */

    }

    // save current reservation data to a file
    public void saveToFile(final String fileName) {
        /*
         * validate reservation file is loaded
         * call reservation.saveToFile(fileName);
         */
    }

    // Create new object
    public Manager() {
        // create and assign value to new object
    }

    // assign value to parameters's duplicateAccount and reservationDraft
    public void Manager(Boolean duplicateAccount, String reservationDraft) {
        /*validate parameters
         *validate Account is not duplicated otherwise should fail
         * validate the reservation is draft
         * Assign parameter to attribute.
         */
    }

}